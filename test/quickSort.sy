const float a = 10.5;
const float x = -1;

const int qq[4][2] = {x - 2, 2,{3},{5},7,8};
int y = 10;
int m[5] = {1,2,3,4,5};
void quickSort(int number[], int first, int last) {
    // int test[2][3] = {{x-1,2.0},{3,4,5}};
    int m;
    m = qq[first];
    const int yy = 10;
    int qqq[5] = {1,2,3,4,5};
    float abc = qq[0][1];
    int bbb = 3.5;
    int xxxx = -abc + bbb / a + !x;
    int i, j, pivot;
    int temp;
    number[i] = j;
    if (first<last) {
        pivot = first;
        i = first;
        j = last;
        while (i<j) {
            while (number[i] <= number[pivot] && i<last)
                i = i + 1;
            while (number[j]>number[pivot])
                j = j - 1;
            if (i<j) {
                temp = number[i];
                number[i] = number[j];
                number[j] = temp;
            }
        }
        temp = number[pivot];
        number[pivot] = number[j];
        number[j] = temp;
        quickSort(number, first, j - 1);
        quickSort(number, j + 1, last);
    }
}
const int b = 20;
int main(){
    int aa = b;
    int a[9] = {1,2,3,4,5,6,7,8,9};
    quickSort(a,0,8);
    return 0;
}