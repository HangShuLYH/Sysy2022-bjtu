.arch armv7ve
.arm
.fpu neon
.text
.global main
.section .bss
.align
x:
	.space 864000000
.align
y:
	.space 864000000
.section .text
.memset:
	push {r4}
	mov r2,#0
	mov r3,#0
	mov r4,#8
.memset8:
	sub r1,r1,#8
	cmp r1,#0
	blt .memset4
	strd r2,r3,[r0],r4
	bne .memset8
	b .memset_end
.memset4:
	str r2,[r0],#4
.memset_end:
	pop {r4}
	bx lr
.init:
.L0:
	bx lr
@ spilled Size: 0
@ stack Size: 24
main:
	push {r4,lr}
	sub sp,sp, #24
	bl .init
.L1:
	bl getint
	str r0,[sp,#16]
	bl getint
	str r0,[sp,#12]
	mov r0,#13
	bl _sysy_starttime
	mov r0,#0
	str r0,[sp,#0]
	mov r0,#0
	str r0,[sp,#4]
	mov r0,#0
	str r0,[sp,#8]
.L2:
	ldr r1,[sp,#0]
	ldr r0,[sp,#16]
	cmp r1,r0
	mov r0,#0
	movlt r0,#1
	cmp r0,#0
	bne .L3
	beq .L10
.L3:
	mov r0,#0
	str r0,[sp,#4]
	mov r0,#0
	str r0,[sp,#8]
.L4:
	ldr r1,[sp,#4]
	ldr r0,[sp,#16]
	cmp r1,r0
	mov r0,#0
	movlt r0,#1
	cmp r0,#0
	bne .L5
	beq .L9
.L5:
	mov r0,#0
	str r0,[sp,#8]
.L6:
	ldr r1,[sp,#8]
	ldr r0,[sp,#16]
	cmp r1,r0
	mov r0,#0
	movlt r0,#1
	cmp r0,#0
	bne .L7
	beq .L8
.L7:
	ldr r1,[sp,#8]
	mov r0,#1
	mul r1,r1,r0
	mov r0,#0
	add r2,r1,r0
	ldr r1,[sp,#4]
	mov r0,#600
	mul r0,r1,r0
	add r2,r2,r0
	ldr r1,[sp,#0]
	movw r0,#32320
	movt r0,#5
	mul r0,r1,r0
	add r2,r2,r0
	movw r1,#:lower16:x
	movt r1,#:upper16:x
	mov r0,#4
	mla r1,r0,r2,r1
	mov r0,#1
	str r0,[r1,#0]
	ldr r1,[sp,#8]
	mov r0,#1
	mul r1,r1,r0
	mov r0,#0
	add r2,r1,r0
	ldr r1,[sp,#4]
	mov r0,#600
	mul r0,r1,r0
	add r2,r2,r0
	ldr r1,[sp,#0]
	movw r0,#32320
	movt r0,#5
	mul r0,r1,r0
	add r2,r2,r0
	movw r1,#:lower16:y
	movt r1,#:upper16:y
	mov r0,#4
	mla r1,r0,r2,r1
	mov r0,#0
	str r0,[r1,#0]
	ldr r1,[sp,#8]
	mov r0,#1
	add r0,r1,r0
	str r0,[sp,#8]
	b .L6
.L8:
	ldr r1,[sp,#4]
	mov r0,#1
	add r0,r1,r0
	str r0,[sp,#4]
	b .L4
.L9:
	ldr r1,[sp,#0]
	mov r0,#1
	add r0,r1,r0
	str r0,[sp,#0]
	b .L2
.L10:
	mov r0,#1
	str r0,[sp,#0]
	mov r0,#1
	str r0,[sp,#4]
	mov r0,#1
	str r0,[sp,#8]
.L11:
	ldr r2,[sp,#0]
	ldr r1,[sp,#16]
	mov r0,#1
	sub r0,r1,r0
	cmp r2,r0
	mov r0,#0
	movlt r0,#1
	cmp r0,#0
	bne .L12
	beq .L19
.L12:
	mov r0,#1
	str r0,[sp,#4]
	mov r0,#1
	str r0,[sp,#8]
.L13:
	ldr r2,[sp,#4]
	ldr r1,[sp,#16]
	mov r0,#1
	sub r0,r1,r0
	cmp r2,r0
	mov r0,#0
	movlt r0,#1
	cmp r0,#0
	bne .L14
	beq .L18
.L14:
	mov r0,#1
	str r0,[sp,#8]
.L15:
	ldr r2,[sp,#8]
	ldr r1,[sp,#16]
	mov r0,#1
	sub r0,r1,r0
	cmp r2,r0
	mov r0,#0
	movlt r0,#1
	cmp r0,#0
	bne .L16
	beq .L17
.L16:
	ldr r1,[sp,#8]
	mov r0,#1
	mul r1,r1,r0
	mov r0,#0
	add r2,r1,r0
	ldr r1,[sp,#4]
	mov r0,#600
	mul r0,r1,r0
	add r2,r2,r0
	ldr r1,[sp,#0]
	movw r0,#32320
	movt r0,#5
	mul r0,r1,r0
	add r2,r2,r0
	movw r1,#:lower16:x
	movt r1,#:upper16:x
	mov r0,#4
	mla r1,r0,r2,r1
	ldr r2,[sp,#8]
	mov r0,#1
	mul r2,r2,r0
	mov r0,#0
	add r3,r2,r0
	ldr r2,[sp,#4]
	mov r0,#600
	mul r0,r2,r0
	add r3,r3,r0
	ldr r2,[sp,#0]
	mov r0,#1
	sub r2,r2,r0
	movw r0,#32320
	movt r0,#5
	mul r0,r2,r0
	add r3,r3,r0
	movw r2,#:lower16:x
	movt r2,#:upper16:x
	mov r0,#4
	mla r2,r0,r3,r2
	ldr r0,[r2,#0]
	ldr r3,[sp,#8]
	mov r2,#1
	mul r3,r3,r2
	mov r2,#0
	add r4,r3,r2
	ldr r3,[sp,#4]
	mov r2,#600
	mul r2,r3,r2
	add r4,r4,r2
	ldr r3,[sp,#0]
	mov r2,#1
	add r3,r3,r2
	movw r2,#32320
	movt r2,#5
	mul r2,r3,r2
	add r4,r4,r2
	movw r3,#:lower16:x
	movt r3,#:upper16:x
	mov r2,#4
	mla r3,r2,r4,r3
	ldr r2,[r3,#0]
	add r0,r0,r2
	ldr r3,[sp,#8]
	mov r2,#1
	mul r3,r3,r2
	mov r2,#0
	add r4,r3,r2
	ldr r3,[sp,#4]
	mov r2,#1
	sub r3,r3,r2
	mov r2,#600
	mul r2,r3,r2
	add r4,r4,r2
	ldr r3,[sp,#0]
	movw r2,#32320
	movt r2,#5
	mul r2,r3,r2
	add r4,r4,r2
	movw r3,#:lower16:x
	movt r3,#:upper16:x
	mov r2,#4
	mla r3,r2,r4,r3
	ldr r2,[r3,#0]
	add r0,r0,r2
	ldr r3,[sp,#8]
	mov r2,#1
	mul r3,r3,r2
	mov r2,#0
	add r4,r3,r2
	ldr r3,[sp,#4]
	mov r2,#1
	add r3,r3,r2
	mov r2,#600
	mul r2,r3,r2
	add r4,r4,r2
	ldr r3,[sp,#0]
	movw r2,#32320
	movt r2,#5
	mul r2,r3,r2
	add r4,r4,r2
	movw r3,#:lower16:x
	movt r3,#:upper16:x
	mov r2,#4
	mla r3,r2,r4,r3
	ldr r2,[r3,#0]
	add r0,r0,r2
	ldr r3,[sp,#8]
	mov r2,#1
	sub r3,r3,r2
	mov r2,#1
	mul r3,r3,r2
	mov r2,#0
	add r4,r3,r2
	ldr r3,[sp,#4]
	mov r2,#600
	mul r2,r3,r2
	add r4,r4,r2
	ldr r3,[sp,#0]
	movw r2,#32320
	movt r2,#5
	mul r2,r3,r2
	add r4,r4,r2
	movw r3,#:lower16:x
	movt r3,#:upper16:x
	mov r2,#4
	mla r3,r2,r4,r3
	ldr r2,[r3,#0]
	add r0,r0,r2
	ldr r3,[sp,#8]
	mov r2,#1
	add r3,r3,r2
	mov r2,#1
	mul r3,r3,r2
	mov r2,#0
	add r4,r3,r2
	ldr r3,[sp,#4]
	mov r2,#600
	mul r2,r3,r2
	add r4,r4,r2
	ldr r3,[sp,#0]
	movw r2,#32320
	movt r2,#5
	mul r2,r3,r2
	add r4,r4,r2
	movw r3,#:lower16:x
	movt r3,#:upper16:x
	mov r2,#4
	mla r3,r2,r4,r3
	ldr r2,[r3,#0]
	add r2,r0,r2
	ldr r0,[sp,#12]
	sdiv r0,r2,r0
	str r0,[r1,#0]
	ldr r1,[sp,#8]
	mov r0,#1
	add r0,r1,r0
	str r0,[sp,#8]
	b .L15
.L17:
	ldr r1,[sp,#4]
	mov r0,#1
	add r0,r1,r0
	str r0,[sp,#4]
	b .L13
.L18:
	ldr r1,[sp,#0]
	mov r0,#1
	add r0,r1,r0
	str r0,[sp,#0]
	b .L11
.L19:
	mov r0,#53
	bl _sysy_stoptime
	ldr r0,[sp,#16]
	movw r1,#:lower16:x
	movt r1,#:upper16:x
	bl putarray
	ldr r0,[sp,#16]
	ldr r2,[sp,#16]
	mov r1,#2
	sdiv r2,r2,r1
	mov r1,#600
	mul r2,r2,r1
	mov r1,#0
	add r3,r2,r1
	ldr r2,[sp,#16]
	mov r1,#2
	sdiv r2,r2,r1
	movw r1,#32320
	movt r1,#5
	mul r1,r2,r1
	add r3,r3,r1
	movw r1,#:lower16:x
	movt r1,#:upper16:x
	mov r2,#4
	mla r1,r2,r3,r1
	bl putarray
	ldr r0,[sp,#16]
	ldr r2,[sp,#4]
	mov r1,#1
	sub r2,r2,r1
	mov r1,#600
	mul r2,r2,r1
	mov r1,#0
	add r3,r2,r1
	ldr r2,[sp,#0]
	mov r1,#1
	sub r2,r2,r1
	movw r1,#32320
	movt r1,#5
	mul r1,r2,r1
	add r3,r3,r1
	movw r1,#:lower16:x
	movt r1,#:upper16:x
	mov r2,#4
	mla r1,r2,r3,r1
	bl putarray
	mov r0,#0
	add sp,sp, #24
	pop {r4,pc}
